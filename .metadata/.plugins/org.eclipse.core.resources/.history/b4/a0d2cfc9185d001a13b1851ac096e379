package icia.project.gabom;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import com.google.gson.Gson;

import icia.project.gabom.dao.IAdminDao;
import icia.project.gabom.dto.House;
import icia.project.gabom.service.AdminjudgeManagement;


@RestController
public class RestAdminController {
	
	private ModelAndView mav;
	@Autowired
	private IAdminDao aDao;
	@Autowired
	private AdminjudgeManagement am; //관리자
	
	
	@GetMapping(value = "/judgemodal", produces = "text/plain;charset=UTF-8")
	public String judgemodal(@RequestParam("num") String num){
		System.out.println("레스트컨트룰러");
		System.out.println("zjsdnzjxc : "+ num);
				
		List<House> jlist = aDao.getjudgemodal(num);
		System.out.println("레스트컨트룰러j"+jlist);
		
		String json = new Gson().toJson(jlist);
		System.out.println(json);
		
		
		return json;
	}
	@PostMapping(value = "/approved" , produces = "text/plain;charset=UTF-8") //심사 승인 컨트롤러
	public String judgeApproved(@RequestParam(value="number", required=false) String number, @RequestParam(value="type", required=false) String type
			,Model md) {
		System.out.println(md.toString());
		System.out.println("승인컨트룰러");
		System.out.println("넘버"+number);
		System.out.println("타입"+type);
		String result = am.judgeApproved(number,type);
		System.out.println("result"+result);
		
		return null;
	}
	@GetMapping(value = "/refuse" , produces = "text/plain;charset=UTF-8") //심사 거절 컨트롤러
	public String judgerefuse(@RequestParam("number") String number, @RequestParam("type") String type) {
		mav = new ModelAndView();
		System.out.println("거절컨트룰러");
		System.out.println("넘버"+number);
		System.out.println("타입"+type);
		mav = am.judgerefuse(number,type);
		
		
		return null;
	}
}
